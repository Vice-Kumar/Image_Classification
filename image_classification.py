# -*- coding: utf-8 -*-
"""Image_classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YE-Gpbv-e-vaM6GeO-S7FmAFlOCELh89
"""

# Commented out IPython magic to ensure Python compatibility.
#Importing dependencies
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
# %matplotlib inline

#using pandas to read database stored in the same folder
data =pd.read_csv('/content/sample_data/mnist_train_small.csv')

#extracting data from dataset and viewing them up close
a=data.iloc[3,1:].values

#viewing column heads
data.head()

#reshaping the extracted data into a resonable size
a=a.reshape(28,28).astype('uint8')
plt.imshow(a)

#preparing data 
#seperating lables and data values
df_x=data.iloc[:,1:]
df_y=data.iloc[:,0]

#creating test and train sizez/batches
x_train,x_test,y_train,y_test=train_test_split(df_x,df_y,test_size=0.2,random_state=4)

#check data
y_train.head()

#call rf classifier
rf=RandomForestClassifier(n_estimators=100)

#fit the model
rf.fit(x_train,y_train)

#prediction on test data
pred=rf.predict(x_test)

pred

#check prediction accuracy
s=y_test.values
#calculate number of correctly predicted values
count=0
for i in range(len(pred)):
  if(pred[i]==s[i]):
   count=count+1

count

#total values that the prediction code was run on
len(pred)

#accuacy value
print(3823/4000*100,end='%')